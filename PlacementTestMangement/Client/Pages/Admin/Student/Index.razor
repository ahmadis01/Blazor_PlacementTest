@page "/admin/student"
@inject NavigationManager navigationManager
@inject HttpClient Http

<div class="search">
	<div class="input-group">
		<div class="form-outline">
			<input type="search" id="form1" @bind-value="@searchText" class="form-control" placeholder="Search.." 
				@bind-value:event="oninput" @onkeyup="@SearchStudents"/>
		</div>
		<button type="button" class="btn btn-primary" @onclick="@SearchStudents">
			<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
				<path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
			</svg>
		</button>
	</div>
</div>

<table class="table">
	<thead>
		<tr>
			<th>Id</th>
			<th>Full Name</th>
			<th>Phone Number</th>
			<th>Total Score</th>
			<th>StartTime</th>
			<th>Timer</th>
			<th>Current Question</th>
			<th>Action</th>
		</tr>
	</thead>
	<tbody>
		@foreach(var student in students){

			<tr>
				<td>@student.Id</td>
				<td>@student.Name</td>
				<td>@student.PhoneNumber</td>
				<td>@(student.WritingMark + student.PlacementTestMark/10 + student.SpeakingMark)</td>
				<td>@student.StartTime</td>
				<td>@student.Timer</td>
				<td>@student.CurrentQuestion</td>
				<td>
					<button class="btn btn-primary" @onclick="() => edit(student.Id)"><svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
						<path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
						<path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
					</svg></button>

				</td>
			</tr>
		}
	</tbody>
</table>

@code{
	private List<Student>? students;
	private Student selectedStudent;
	public string searchText;
	protected override async Task OnInitializedAsync(){
		students = await Http.GetFromJsonAsync<List<Student>>("/api/student");
		students.Reverse();
	}
	private async void SearchStudents(){
		if(searchText.Equals("")){
			students = await Http.GetFromJsonAsync<List<Student>>("/api/student");
			students.Reverse();
		}
		else{
			students = await Http.GetFromJsonAsync<List<Student>>($"/api/student/search/{searchText}");
			students.Reverse();

		}
			
	}
	private void edit(int questionId)
	{
		navigationManager.NavigateTo($"/admin/student/{questionId}");
	}
}